Starting audit...
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:14:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:18:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:18:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:22:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:26:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:26:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:30:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'addNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'addNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:30:29: Parameter gift should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:34:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:38:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'addNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'addNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:38:32: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:42:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:42:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:46:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:50:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:50:36: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:54:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'addChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'addChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:54:36: Parameter update should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:58:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:60:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:61:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:62:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:63:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\AnnualChange.java:64:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:9:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:29:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:33:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:33:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:37:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:41:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:41:32: Parameter niceHistory should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:45:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:49:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:49:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:53:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:53:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:57:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:61:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:61:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:65:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:69:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:69:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:73:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:77:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:77:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:81:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:85:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:85:29: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:89:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:93:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:93:30: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:97:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:101:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:101:25: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:105:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:109:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'addGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'addGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:109:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:109:37: Parameter gift should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:113:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toJSONObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toJSONObject' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:136:19: 'receivedGifts' hides a field. [HiddenField]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:145:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:147:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:148:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:149:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:150:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:151:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:152:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:153:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Child.java:154:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:17:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:21:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:21:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:25:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:29:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:29:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:33:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNewPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNewPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:37:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'addNewPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'addNewPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\ChildUpdate.java:37:35: Parameter giftCat should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:7:35: Name 'database' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:9:10: Variable 'numberOfYears' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:10:12: Variable 'santaBudget' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:12:23: Variable 'childList' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:13:21: Variable 'giftList' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:14:29: Variable 'changes' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:16:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:20:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:20:28: Parameter changes should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:24:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'addChange' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'addChange' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:24:27: Parameter change should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:28:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:32:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:32:34: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:36:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getGiftList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getGiftList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:40:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:44:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:44:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:48:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getChildList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getChildList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:52:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'addToChildList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'addToChildList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:52:32: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:56:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'addToGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'addToGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:56:32: Parameter gift should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:60:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'clearDatabase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'clearDatabase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Database.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:14:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:18:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:18:32: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:22:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:26:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:26:26: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:30:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:34:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:34:29: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:38:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'toJSONObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'toJSONObject' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:48:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:50:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:51:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:52:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\database\Gift.java:53:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:20:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:44:33: Parameter inputFile should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:63:24: Name 'JSONChild' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:74: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:88:24: Name 'JSONGift' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:103:24: Name 'JSONChanges' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:106: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:112:28: Name 'JSONGift' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:128:28: Name 'JSONChild' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:139: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:153:28: Name 'JSONChildUpdate' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:157: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Parser.java:160: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Writer.java:8:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\io\Writer.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Baby.java:13:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Baby.java:15:16: '10.0' is a magic number. [MagicNumber]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\ChildAgeCategory.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\ChildAgeCategory.java:4:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Kid.java:15:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Simulation.java:20:5: Class 'Simulation' looks like designed for extension (can be subclassed), but the method 'writeReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Simulation' final or making the method 'writeReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Simulation.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Simulation.java:31:5: Class 'Simulation' looks like designed for extension (can be subclassed), but the method 'simulateYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Simulation' final or making the method 'simulateYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Simulation.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Simulation.java:33:19: 'annualChanges' hides a field. [HiddenField]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\SimulationWrapper.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\SimulationWrapper.java:24:24: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\Teen.java:17:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\YoungAdult.java:9:23: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\andu\Documents\GitHub\Proiect1-OOP\.\src\simulation\YoungAdult.java:13:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 158 errors.
